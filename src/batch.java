
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author surya
 */
public class batch extends javax.swing.JInternalFrame {

    /**
     * Creates new form batch
     */
    String BatchId;
    Connection x;
    ArrayList Coursedata=new ArrayList();
   
    public batch(Connection x) {
        initComponents();
        this.x=x;
        fill_DeptName();
        showdata();
    }

    void fill_DeptName()
    {
        try
        {
        String query="select * from department";
        PreparedStatement ps=x.prepareStatement(query);
        ResultSet rs=ps.executeQuery();
        while(rs.next())
        {
        cmb_DeptName.addItem(rs.getString("dept_name"));
         
        }
        }
        
    catch(Exception e)
    {
    e.printStackTrace();
    }
        
    }
    void showdata()
    {
     try
    {
    Vector heading=new Vector();
    heading.add("BatchId");
    heading.add("CourseId");
     heading.add("BatchName");
String query="select * from batch";
PreparedStatement ps=x.prepareStatement(query);
ResultSet rs=ps.executeQuery();
Vector data=new Vector();     
while(rs.next())
{
  
Vector row=new Vector();
row.add(rs.getString("batch_id"));
row.add(rs.getString("course_id"));
row.add(rs.getString("batch_name"));
data.add(row);

}
DefaultTableModel d=new DefaultTableModel(data,heading);
jTable1.setModel(d);

}
    catch(Exception e)
    {
    e.printStackTrace();
    }

        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmb_DeptName = new javax.swing.JComboBox<>();
        cmb_CourseName = new javax.swing.JComboBox<>();
        cmb_BatchName = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        InsertButton = new javax.swing.JButton();
        UpdateButton = new javax.swing.JButton();
        DeleteButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setText("DeptName");

        jLabel2.setText("CourseName");

        jLabel3.setText("Batch");

        cmb_DeptName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_DeptNameItemStateChanged(evt);
            }
        });

        cmb_CourseName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_CourseNameItemStateChanged(evt);
            }
        });
        cmb_CourseName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_CourseNameActionPerformed(evt);
            }
        });

        cmb_BatchName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", " " }));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "BatchId", "CourseId", "BatchName"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        InsertButton.setText("Insert");
        InsertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertButtonActionPerformed(evt);
            }
        });

        UpdateButton.setText("Update");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        DeleteButton2.setText("Delete");
        DeleteButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButton2ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("DejaVu Sans", 0, 24)); // NOI18N
        jLabel4.setText("Batch");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(InsertButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
            .addGroup(layout.createSequentialGroup()
                .addGap(261, 261, 261)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel3)
                        .addComponent(jLabel2))
                    .addComponent(UpdateButton))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmb_BatchName, 0, 90, Short.MAX_VALUE)
                            .addComponent(cmb_DeptName, 0, 90, Short.MAX_VALUE)
                            .addComponent(cmb_CourseName, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(DeleteButton2))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cmb_DeptName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cmb_CourseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(cmb_BatchName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(InsertButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UpdateButton)
                    .addComponent(DeleteButton2))
                .addGap(51, 51, 51))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void InsertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertButtonActionPerformed
        // TODO add your handling code here:
       
        try
        {
            int Courseindex=cmb_CourseName.getSelectedIndex();
            String x1[]=(String []) Coursedata.get(Courseindex);
            String CourseId=x1[0];
        String BatchName=(String) cmb_BatchName.getSelectedItem();
        
        String query23="insert into batch(course_id,batch_name)values(?,?)";
        PreparedStatement ps23=x.prepareStatement(query23);
        ps23.setString(1,CourseId);
        ps23.setString(2,BatchName);
     
        int chk=ps23.executeUpdate();
        JOptionPane.showMessageDialog(this,"data inserted");
        showdata();
        
        }
        
        catch(Exception e)
        {
        e.printStackTrace(); 
        JOptionPane.showMessageDialog(this,"data can't be inserted. "+e.getMessage());
        }
    }//GEN-LAST:event_InsertButtonActionPerformed

    private void cmb_DeptNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_DeptNameItemStateChanged
        // TODO add your handling code here:
        try
        {
            cmb_CourseName.removeAllItems();
            Coursedata.clear();
            String DeptId=null;
            String DeptName=(String) cmb_DeptName.getSelectedItem();
        String query="select dept_id from department where dept_name=?";
        PreparedStatement ps=x.prepareStatement(query);
        ps.setString(1,DeptName);
        ResultSet rs=ps.executeQuery();
        if(rs.next())
        {
        DeptId=rs.getString("dept_id");
         
        }
        
         String query2="select * from course where dept_id=?";
        PreparedStatement ps2=x.prepareStatement(query2);
        ps2.setString(1,DeptId);
        ResultSet rs2=ps2.executeQuery();
        while(rs2.next())
        {
            String CourseId=rs2.getString("course_id");
            String CourseName=rs2.getString("course_name");
            String x1[]=new String[2];
            x1[0]=CourseId;
            x1[1]=CourseName;
            Coursedata.add(x1);
        cmb_CourseName.addItem(CourseName);
         
        }
        
        
        
        }
        
    catch(Exception e)
    {
    e.printStackTrace();
    
    }
    }//GEN-LAST:event_cmb_DeptNameItemStateChanged

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        // TODO add your handling code here:
        try
        {
            int Courseindex=cmb_CourseName.getSelectedIndex();
            String x1[]=(String []) Coursedata.get(Courseindex);
            String CourseId=x1[0];
        String BatchName=(String) cmb_BatchName.getSelectedItem();
 
        
        String query2="update batch set course_id=?,batch_name=? where batch_id=?";
        PreparedStatement ps2=x.prepareStatement(query2);
        ps2.setString(1,CourseId);
        ps2.setString(2,BatchName);
        ps2.setString(3,BatchId);
        
        int chk=ps2.executeUpdate();
        JOptionPane.showMessageDialog(this,"Data modified");
        showdata();
        
        
        
        }
        catch(Exception e)
        {
        e.printStackTrace();
         JOptionPane.showMessageDialog(this,"Data can't be modified"+e.getMessage());
        }
        
    }                                            

 /*private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_UpdateButtonActionPerformed
*/
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        try
        {
            
        int index=jTable1.getSelectedRow();
        TableModel tm = jTable1.getModel();
       
        BatchId= (String)tm.getValueAt(index,0);
        String CourseId= (String)tm.getValueAt(index,1);
        String BatchName = (String)tm.getValueAt(index,2);
       
        
        cmb_BatchName.setSelectedItem(BatchName);
        
        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void cmb_CourseNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_CourseNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_CourseNameActionPerformed

    private void cmb_CourseNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_CourseNameItemStateChanged
        // TODO add your handling code here:
       
    }//GEN-LAST:event_cmb_CourseNameItemStateChanged

    private void DeleteButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButton2ActionPerformed
        // TODO add your handling code here:
         try
        {
       
        String query="delete from batch where batch_id=?";
        PreparedStatement ps=x.prepareStatement(query);
        ps.setString(1,BatchId);
        int chk=ps.executeUpdate();
        JOptionPane.showMessageDialog(this,"Data deleted");
        showdata();
        }
        catch(Exception e)
        {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this,"Data cant be deleted");
        }
        
    }//GEN-LAST:event_DeleteButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteButton2;
    private javax.swing.JButton InsertButton;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JComboBox<String> cmb_BatchName;
    private javax.swing.JComboBox<String> cmb_CourseName;
    private javax.swing.JComboBox<String> cmb_DeptName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
