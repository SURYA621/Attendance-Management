
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author surya
 */
public class Teacher extends javax.swing.JInternalFrame {

    /**
     * Creates new form Teacher
     */
    String TeacherId;
    Connection x;
    public Teacher(Connection x) {
        initComponents();
        this.x=x;
        fill_Combobox();
        showdata();
    }
    void fill_Combobox()
    {
    
    try
        {
          
        
        String query="select * from department";
        PreparedStatement ps=x.prepareStatement(query);
        ResultSet rs=ps.executeQuery();
        while(rs.next())
        {
        cmb_DeptName.addItem(rs.getString("dept_name"));
         
        }
        }
    catch(Exception e)
    {
    e.printStackTrace();}
    }
    void showdata()
    {
    try
    {
    Vector heading=new Vector();
    heading.add("TeacherId");
    heading.add("DeptId");
    heading.add("TeacherName");
    heading.add("Password");
    heading.add("hint");
String query="select * from teacher";
PreparedStatement ps=x.prepareStatement(query);
ResultSet rs=ps.executeQuery();
Vector data=new Vector();     
while(rs.next())
{
  
Vector row=new Vector();
row.add(rs.getString("teacher_id"));
row.add(rs.getString("dept_id"));
row.add(rs.getString("teacher_name"));
row.add(rs.getString("password"));
row.add(rs.getString("hint"));
data.add(row);

}
DefaultTableModel d=new DefaultTableModel(data,heading);
jTable1.setModel(d);

}
    catch(Exception e)
    {
    e.printStackTrace();
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_TeacherName = new javax.swing.JTextField();
        txt_Password = new javax.swing.JTextField();
        InsertButton = new javax.swing.JButton();
        UpdateButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cmb_DeptName = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txt_Hint = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "TeacherId", "DeptId", "TeacherName", "Password", "hint"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Teacher");

        jLabel2.setText("TeacherName");

        jLabel3.setText("Password");

        InsertButton.setText("Insert");
        InsertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertButtonActionPerformed(evt);
            }
        });

        UpdateButton.setText("Update");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("DeptName");

        cmb_DeptName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        jLabel5.setText("hint");

        txt_Hint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_HintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(UpdateButton)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel4))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel5)
                                .addComponent(jLabel3)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(cmb_DeptName, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(84, 84, 84)
                                .addComponent(DeleteButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_TeacherName)
                                    .addComponent(txt_Password, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                                    .addComponent(txt_Hint, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(InsertButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(335, 335, 335)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cmb_DeptName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txt_TeacherName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txt_Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(txt_Hint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(InsertButton)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UpdateButton)
                    .addComponent(DeleteButton))
                .addContainerGap(102, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void InsertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertButtonActionPerformed
        // TODO add your handling code here:
        try
        {
          
        String TeacherName=txt_TeacherName.getText();
        String Password=txt_Password.getText();
        String Hint=txt_Hint.getText();
        
        String DeptId=null;
        String DeptName=(String)cmb_DeptName.getSelectedItem();
        String query="select dept_id from department where dept_name=?";
        PreparedStatement ps=x.prepareStatement(query);
        ps.setString(1,DeptName);
        ResultSet rs=ps.executeQuery();
        if(rs.next())
       {
         DeptId=rs.getString("dept_id");
        }
        
        String query2="insert into teacher(dept_id,teacher_name,password,hint)values(?,?,?,?)";
        PreparedStatement ps2=x.prepareStatement(query2);
        ps2.setString(1,DeptId);
          ps2.setString(2,TeacherName);
           ps2.setString(3,Password);
           ps2.setString(4,Hint);
        int chk=ps2.executeUpdate();
        JOptionPane.showMessageDialog(this,"data inserted");
        showdata();
        
        }
        
        catch(Exception e)
        {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this,"data can't be inserted. "+e.getMessage());
        
        }
    }//GEN-LAST:event_InsertButtonActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
         try
        {
         int index=jTable1.getSelectedRow();
        TableModel tm = jTable1.getModel();
        TeacherId=(String)tm.getValueAt(index,0);
       
       String DeptId= (String)tm.getValueAt(index,1);
       String TeacherName= (String)tm.getValueAt(index,2);
        String Password= (String)tm.getValueAt(index,3);
         String DeptName= null;
        String query="select dept_name from department where dept_id=?";
        PreparedStatement ps=x.prepareStatement(query);
        ps.setString(1,DeptId);
        ResultSet rs=ps.executeQuery();
          
        while(rs.next())
        {
        DeptName=rs.getString("dept_name");
        }

        cmb_DeptName.setSelectedItem(DeptName);

        txt_TeacherName.setText(TeacherName);
        txt_Password.setText(Password);
        
        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        // TODO add your handling code here:
        try
        {
         String TeacherName=(String)txt_TeacherName.getText();  
        String Password=txt_Password.getText();
        String Hint=txt_Hint.getText();
        String DeptName=(String) cmb_DeptName.getSelectedItem();
        String DeptId=null;
        String query="select dept_id from department where dept_name=?";
        PreparedStatement ps=x.prepareStatement(query);
        ps.setString(1,DeptName);
        ResultSet rs=ps.executeQuery();
        if(rs.next())
       {
         DeptId=rs.getString("dept_id");
        }

        String query2="update teacher set teacher_id=?,dept_id=?,teacher_name=?,password=?,hint=? where teacher_id=?";
        PreparedStatement ps2=x.prepareStatement(query2);
        ps2.setString(1,TeacherId);
        ps2.setString(2,DeptId);
        ps2.setString(3,TeacherName);
        ps2.setString(4,Password);
        ps2.setString(5,Hint);
        ps2.setString(6,TeacherId);
        int chk=ps2.executeUpdate();
        JOptionPane.showMessageDialog(this,"Data modified");
        showdata();
        
        
        
        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:
        try
        {
       
        String query="delete from teacher where teacher_id=?";
        PreparedStatement ps=x.prepareStatement(query);
        ps.setString(1,TeacherId);
        int chk=ps.executeUpdate();
        JOptionPane.showMessageDialog(this,"Data deleted");
        showdata();
        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void txt_HintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_HintActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_HintActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteButton;
    private javax.swing.JButton InsertButton;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JComboBox<String> cmb_DeptName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txt_Hint;
    private javax.swing.JTextField txt_Password;
    private javax.swing.JTextField txt_TeacherName;
    // End of variables declaration//GEN-END:variables
}
