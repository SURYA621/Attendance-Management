
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author surya
 */
public class SubjectAssignment extends javax.swing.JInternalFrame {

    /**
     * Creates new form SubjectAssignment
     */
    Connection x;
    String SaId;
    public SubjectAssignment(Connection x) {
        initComponents();
        this.x=x;
        fill_Combobox();
        showdata();
    }
    void showdata()
    {
    
     try
    {
    Vector heading=new Vector();
    heading.add("SaId");
    heading.add("TeacherId");
     heading.add("SectionId");
     heading.add("SubjectId");
      
String query="select * from sa";
PreparedStatement ps=x.prepareStatement(query);
ResultSet rs=ps.executeQuery();
Vector data=new Vector();     
while(rs.next())
{
  
Vector row=new Vector();
row.add(rs.getString("sa_id"));
row.add(rs.getString("teacher_id"));
row.add(rs.getString("section_id"));
row.add(rs.getString("subject_id"));

data.add(row);

}
DefaultTableModel d=new DefaultTableModel(data,heading);
jTable1.setModel(d);

}
    catch(Exception e)
    {
    e.printStackTrace();
    }
    }
    void fill_Combobox()
    {
    
         try
        {
          
        
        String query="select * from department";
        PreparedStatement ps=x.prepareStatement(query);
        ResultSet rs=ps.executeQuery();
        while(rs.next())
        {
        cmb_DeptName.addItem(rs.getString("dept_name"));
        
        }
        }
    catch(Exception e)
    {
    e.printStackTrace();}
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmb_DeptName = new javax.swing.JComboBox<>();
        cmb_CourseName = new javax.swing.JComboBox<>();
        cmb_BatchName = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cmb_SectionName = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cmb_TeacherName = new javax.swing.JComboBox<>();
        cmb_SubjectName = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        InsertButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        UpdateButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        cmb_SemName = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setText("DeptName");

        jLabel2.setText("CourseName");

        jLabel3.setText("Batch");

        cmb_DeptName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        cmb_DeptName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_DeptNameItemStateChanged(evt);
            }
        });

        cmb_CourseName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        cmb_CourseName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_CourseNameItemStateChanged(evt);
            }
        });
        cmb_CourseName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_CourseNameActionPerformed(evt);
            }
        });

        cmb_BatchName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        cmb_BatchName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_BatchNameItemStateChanged(evt);
            }
        });

        jLabel4.setText("Section");

        cmb_SectionName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        cmb_SectionName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_SectionNameActionPerformed(evt);
            }
        });

        jLabel5.setText("TeacherName");

        jLabel6.setText("Subject");

        cmb_TeacherName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        cmb_SubjectName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Sa_id", "TeacherId", "SectionId", "SubjectId"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        InsertButton.setText("Insert");
        InsertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertButtonActionPerformed(evt);
            }
        });

        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        UpdateButton.setText("Update");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("sem");

        cmb_SemName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        jLabel8.setText("Subject_Assignment");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(UpdateButton)
                .addGap(116, 116, 116)
                .addComponent(DeleteButton)
                .addGap(124, 124, 124))
            .addGroup(layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(cmb_TeacherName, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmb_CourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(35, 35, 35)
                            .addComponent(cmb_DeptName, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(28, 28, 28)
                                    .addComponent(jLabel3))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(8, 8, 8)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel4))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cmb_BatchName, javax.swing.GroupLayout.Alignment.TRAILING, 0, 99, Short.MAX_VALUE)
                                .addComponent(cmb_SemName, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmb_SectionName, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(217, 217, 217)
                        .addComponent(InsertButton)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(jLabel6)
                        .addGap(42, 42, 42)
                        .addComponent(cmb_SubjectName, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(367, 367, 367)
                        .addComponent(jLabel8)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmb_TeacherName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(InsertButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cmb_DeptName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(cmb_CourseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(cmb_BatchName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(cmb_SemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cmb_SectionName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(29, 29, 29)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cmb_SubjectName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UpdateButton)
                    .addComponent(DeleteButton))
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmb_DeptNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_DeptNameItemStateChanged
        // TODO add your handling code here:
         try
        {
             
            cmb_CourseName.removeAllItems();
            cmb_TeacherName.removeAllItems();
            String DeptId=null; 
            String DeptName=(String) cmb_DeptName.getSelectedItem();
        String query="select dept_id from department where dept_name=?";
        PreparedStatement ps=x.prepareStatement(query);
        ps.setString(1,DeptName);
        ResultSet rs=ps.executeQuery();
        if(rs.next())
        {
        DeptId=rs.getString("dept_id");
         
        }
         String query2="select course_name from course where dept_id=?";
        PreparedStatement ps2=x.prepareStatement(query2);
        ps2.setString(1,DeptId);
        ResultSet rs2=ps2.executeQuery();
        while(rs2.next())
        {
        cmb_CourseName.addItem(rs2.getString("course_name"));
         
        }
         String query3="select teacher_name from teacher where dept_id=?";
        PreparedStatement ps3=x.prepareStatement(query3);
        ps3.setString(1,DeptId);
        ResultSet rs3=ps3.executeQuery();
        while(rs3.next())
        {
        cmb_TeacherName.addItem(rs3.getString("teacher_name"));
         
        }
        
        
        
        }
        
    catch(Exception e)
    {
    e.printStackTrace();
    }
    }//GEN-LAST:event_cmb_DeptNameItemStateChanged

    private void cmb_CourseNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_CourseNameItemStateChanged
        // TODO add your handling code here:
        try
        {
            cmb_BatchName.removeAllItems();
                cmb_SubjectName.removeAllItems();
                cmb_SemName.removeAllItems();
            String CourseId=null;
            String CourseName=(String) cmb_CourseName.getSelectedItem();
        String query="select course_id from course where course_name=?";
        PreparedStatement ps=x.prepareStatement(query);
        ps.setString(1,CourseName);
        ResultSet rs=ps.executeQuery();
        if(rs.next())
        {
        CourseId=rs.getString("course_id");
         
        }
         String query2="select batch_name from batch where course_id=?";
        PreparedStatement ps2=x.prepareStatement(query2);
        ps2.setString(1,CourseId);
        ResultSet rs2=ps2.executeQuery();
        while(rs2.next())
        {
        cmb_BatchName.addItem(rs2.getString("batch_name"));
         
        }
          String query3="select subject_name from subject where course_id=?";
        PreparedStatement ps3=x.prepareStatement(query3);
        ps3.setString(1,CourseId);
        ResultSet rs3=ps3.executeQuery();
        while(rs3.next())
        {
        cmb_SubjectName.addItem(rs3.getString("subject_name"));
         
        }
        
        int nos=0;
       
        String query4="select no_of_semester from course where course_name=?";
        PreparedStatement ps4=x.prepareStatement(query4);
        ps4.setString(1,CourseName);
        ResultSet rs4=ps4.executeQuery();
        if(rs4.next())
       {
        nos=rs4.getInt("no_of_semester");
        
       }
        
        for(int i=1;i<=nos;i++)
        {
        
        cmb_SemName.addItem(String.valueOf(i));
        }
        
        
        
        }
        
    catch(Exception e)
    {
    e.printStackTrace();
    }
    }//GEN-LAST:event_cmb_CourseNameItemStateChanged

    private void cmb_BatchNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_BatchNameItemStateChanged
        // TODO add your handling code here:
        try
        {
            // JOptionPane.showMessageDialog(this,"item state changed");
            cmb_SectionName.removeAllItems();
            String BatchId=null;
            String BatchName=(String) cmb_BatchName.getSelectedItem();
        String query="select batch_id from batch where batch_name=?";
        PreparedStatement ps=x.prepareStatement(query);
        ps.setString(1,BatchName);
        ResultSet rs=ps.executeQuery();
        if(rs.next())
        {
        BatchId=rs.getString("batch_id");
         
        }
         //JOptionPane.showMessageDialog(this,"hi"+BatchName+BatchId);
         String query2="select section_name from section where batch_id=?";
        PreparedStatement ps2=x.prepareStatement(query2);
        ps2.setString(1,BatchId);
        ResultSet rs2=ps2.executeQuery();
        while(rs2.next())
        {
             //JOptionPane.showMessageDialog(this,"inside the while");
        cmb_SectionName.addItem(rs2.getString("section_name"));
         
        }
        
        
        
        }
        
    catch(Exception e)
    {
    e.printStackTrace();
    }
    }//GEN-LAST:event_cmb_BatchNameItemStateChanged

    private void cmb_CourseNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_CourseNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_CourseNameActionPerformed

    private void InsertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertButtonActionPerformed
        // TODO add your handling code here:
        try
        {
        String TeacherName=(String) cmb_TeacherName.getSelectedItem();
        String TeacherId=null;
          String query="select teacher_id from teacher where teacher_name=?";
        PreparedStatement ps=x.prepareStatement(query);
        ps.setString(1,TeacherName);
        ResultSet rs=ps.executeQuery();
        if(rs.next())
       {
         TeacherId=rs.getString("teacher_id");
        }
        String SectionName=(String) cmb_SectionName.getSelectedItem();
        String SectionId=null;
         String query2="select section_id from section where section_name=?";
        PreparedStatement ps2=x.prepareStatement(query2);
        ps2.setString(1,SectionName);
        ResultSet rs2=ps2.executeQuery();
        if(rs2.next())
       {
         SectionId=rs2.getString("section_id");
        }
        String SubjectName=(String) cmb_SubjectName.getSelectedItem();
        String SubjectId=null;
         String query3="select subject_id from subject where subject_name=?";
        PreparedStatement ps3=x.prepareStatement(query3);
        ps3.setString(1,SubjectName);
        ResultSet rs3=ps3.executeQuery();
        if(rs3.next())
       {
         SubjectId=rs3.getString("subject_id");
        
       }
       
        String query5="insert into sa(teacher_id,section_id,subject_id)values(?,?,?)";
        PreparedStatement ps5=x.prepareStatement(query5);
        ps5.setString(1,TeacherId);
          ps5.setString(2,SectionId);
           ps5.setString(3,SubjectId);
           
        int chk=ps5.executeUpdate();
        JOptionPane.showMessageDialog(this,"data inserted");
        showdata();

        
        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
    }//GEN-LAST:event_InsertButtonActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        // TODO add your handling code here:
        try
        {
            
         String TeacherName=(String) cmb_TeacherName.getSelectedItem();
        String TeacherId=null;
          String query="select teacher_id from teacher where teacher_name=?";
        PreparedStatement ps=x.prepareStatement(query);
        ps.setString(1,TeacherName);
        ResultSet rs=ps.executeQuery();
        if(rs.next())
       {
         TeacherId=rs.getString("teacher_id");
        }
        String SectionName=(String) cmb_SectionName.getSelectedItem();
        String SectionId=null;
         String query2="select section_id from section where section_name=?";
        PreparedStatement ps2=x.prepareStatement(query2);
        ps2.setString(1,SectionName);
        ResultSet rs2=ps2.executeQuery();
        if(rs2.next())
       {
         SectionId=rs2.getString("section_id");
        }
        String SubjectName=(String) cmb_SubjectName.getSelectedItem();
        String SubjectId=null;
         String query3="select subject_id from subject where subject_name=?";
        PreparedStatement ps3=x.prepareStatement(query3);
        ps3.setString(1,SubjectName);
        ResultSet rs3=ps3.executeQuery();
        if(rs3.next())
       {
         SubjectId=rs3.getString("subject_id");
        }
        
        
        String query4="update sa set teacher_id=?,section_id=?,subject_id=? where sa_id=?";
        PreparedStatement ps4=x.prepareStatement(query4);
        ps4.setString(1,TeacherId);
        ps4.setString(2,SectionId);
        ps4.setString(3,SubjectId);
         ps4.setString(4,SaId);
       
        
        int chk=ps4.executeUpdate();
        JOptionPane.showMessageDialog(this,"Data modified");
        showdata();
        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int index=jTable1.getSelectedRow();
        TableModel tm = jTable1.getModel();
         SaId= (String)tm.getValueAt(index,0);
    }//GEN-LAST:event_jTable1MouseClicked

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:
         try
        {
       
        String query="delete from sa where sa_id=?";
        PreparedStatement ps=x.prepareStatement(query);
        ps.setString(1,SaId);
        int chk=ps.executeUpdate();
        JOptionPane.showMessageDialog(this,"Data deleted");
        showdata();
        }
        catch(Exception e)
        {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this,"Data cant be deleted");
        }
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void cmb_SectionNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_SectionNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_SectionNameActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteButton;
    private javax.swing.JButton InsertButton;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JComboBox<String> cmb_BatchName;
    private javax.swing.JComboBox<String> cmb_CourseName;
    private javax.swing.JComboBox<String> cmb_DeptName;
    private javax.swing.JComboBox<String> cmb_SectionName;
    private javax.swing.JComboBox<String> cmb_SemName;
    private javax.swing.JComboBox<String> cmb_SubjectName;
    private javax.swing.JComboBox<String> cmb_TeacherName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
