
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author surya
 */
public class Subject extends javax.swing.JInternalFrame {

    /**
     * Creates new form Subject
     */
    String SubjectId;
    Connection x;
     ArrayList Coursedata=new ArrayList();
    public Subject(Connection x) {
        initComponents();
        this.x=x;
        showdata();
        fill_Combobox();
    }
   void fill_Combobox()
    {
    
         try
        {
          
        
        String query="select * from department";
        PreparedStatement ps=x.prepareStatement(query);
        ResultSet rs=ps.executeQuery();
        while(rs.next())
        {
        cmb_DeptName.addItem(rs.getString("dept_name"));
        // DeptId=rs.getString("dept_id");
         
        }
        }
    catch(Exception e)
    {
    e.printStackTrace();}
    }
    
    void showdata()
    {
    try
    {
    Vector heading=new Vector();
    heading.add("SubjectId");
    heading.add("CourseId");
     heading.add("SubjectName");
     heading.add("Sem");
String query="select * from subject";
PreparedStatement ps=x.prepareStatement(query);
ResultSet rs=ps.executeQuery();
Vector data=new Vector();     
while(rs.next())
{
  
Vector row=new Vector();
row.add(rs.getString("subject_id"));
row.add(rs.getString("course_id"));
row.add(rs.getString("subject_name"));
row.add(rs.getString("sem"));
data.add(row);

}
DefaultTableModel d=new DefaultTableModel(data,heading);
jTable1.setModel(d);

}
    catch(Exception e)
    {
    e.printStackTrace();
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmb_CourseName = new javax.swing.JComboBox<>();
        txt_SubjectName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        InsertButton = new javax.swing.JButton();
        UpdateButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cmb_SemName = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cmb_DeptName = new javax.swing.JComboBox<>();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setText("Subject");

        jLabel2.setText("CourseName");

        jLabel3.setText("SubjectName");

        cmb_CourseName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        cmb_CourseName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_CourseNameItemStateChanged(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "SubjectId", "CourseId", "SubjectName", "sem"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        InsertButton.setText("Insert");
        InsertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertButtonActionPerformed(evt);
            }
        });

        UpdateButton.setText("Update");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Sem");

        cmb_SemName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        jLabel5.setText("DeptName");

        cmb_DeptName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        cmb_DeptName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_DeptNameItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(InsertButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel4)))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_SubjectName, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                            .addComponent(cmb_SemName, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_DeptName, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_CourseName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(287, 287, 287)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(UpdateButton)
                        .addGap(71, 71, 71)
                        .addComponent(DeleteButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel5)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(UpdateButton)
                            .addComponent(DeleteButton))
                        .addGap(113, 113, 113))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cmb_DeptName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cmb_CourseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txt_SubjectName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cmb_SemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(InsertButton)
                        .addGap(158, 158, 158))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void InsertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertButtonActionPerformed
        // TODO add your handling code here:
        try
        {
            
        int Courseindex=cmb_CourseName.getSelectedIndex();
            String x1[]=(String []) Coursedata.get(Courseindex);
            String CourseId=x1[0];
        String CourseName=(String)cmb_CourseName.getSelectedItem();
        String SubjectName=txt_SubjectName.getText();
       String SemName=(String) cmb_SemName.getSelectedItem();
       
        String query2="insert into subject(course_id,subject_name,sem)values(?,?,?)";
        PreparedStatement ps2=x.prepareStatement(query2);
        ps2.setString(1,CourseId);
        ps2.setString(2,SubjectName);
         ps2.setString(3,SemName);
        int chk=ps2.executeUpdate();
        JOptionPane.showMessageDialog(this,"data inserted");
        showdata();
        
        }
        
        catch(Exception e)
        {
        e.printStackTrace(); 
        JOptionPane.showMessageDialog(this,"data can't be inserted. "+e.getMessage());
        }
    }//GEN-LAST:event_InsertButtonActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        try
        {
         int index=jTable1.getSelectedRow();
        TableModel tm = jTable1.getModel();
       
          SubjectId= (String)tm.getValueAt(index,0);
        String CourseId= (String)tm.getValueAt(index,1);
        String SubjectName = (String)tm.getValueAt(index,2);
        String CourseName= null;
        String query="select Course_name from course where course_id=?";
        PreparedStatement ps=x.prepareStatement(query);
        ps.setString(1,CourseId);
        ResultSet rs=ps.executeQuery();
          
        while(rs.next())
        {
        CourseName=rs.getString("course_name");
        }

        cmb_CourseName.setSelectedItem(CourseName);
        txt_SubjectName.setText(SubjectName);
        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        // TODO add your handling code here:
        try
        {
         int Courseindex=cmb_CourseName.getSelectedIndex();
            String x1[]=(String []) Coursedata.get(Courseindex);
            String CourseId=x1[0];
        String SubjectName=txt_SubjectName.getText();
        String SemName=(String) cmb_SemName.getSelectedItem();
        String query2="update subject set course_id=?,subject_name=?,sem=? where subject_id=?";
        PreparedStatement ps2=x.prepareStatement(query2);
        ps2.setString(1,CourseId);
        ps2.setString(2,SubjectName);
        ps2.setString(3,SemName);
        ps2.setString(4,SubjectId);
        int chk=ps2.executeUpdate();
        JOptionPane.showMessageDialog(this,"Data modified");
        showdata();
        
        
        
        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:
        try
        {
       
        String query="delete from subject where subject_id=?";
        PreparedStatement ps=x.prepareStatement(query);
        ps.setString(1,SubjectId);
        int chk=ps.executeUpdate();
        JOptionPane.showMessageDialog(this,"Data deleted");
        showdata();
        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void cmb_CourseNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_CourseNameItemStateChanged
        // TODO add your handling code here:
        try
        {
        cmb_SemName.removeAllItems();
            int nos=0;
       String CourseName=(String)cmb_CourseName.getSelectedItem();
        String query4="select no_of_semester from course where course_name=?";
        PreparedStatement ps4=x.prepareStatement(query4);
        ps4.setString(1,CourseName);
        ResultSet rs4=ps4.executeQuery();
        if(rs4.next())
       {
        nos=rs4.getInt("no_of_semester");
        
       }
        
        for(int i=1;i<=nos;i++)
        {
        
        cmb_SemName.addItem(String.valueOf(i));
        }
        
        
        
        }
        
        catch(Exception e)
        {
        e.printStackTrace();
        }
    }//GEN-LAST:event_cmb_CourseNameItemStateChanged

    private void cmb_DeptNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_DeptNameItemStateChanged
        // TODO add your handling code here:
        try
        {
            cmb_CourseName.removeAllItems();
            Coursedata.clear();
            String DeptId=null;
            String DeptName=(String) cmb_DeptName.getSelectedItem();
        String query="select dept_id from department where dept_name=?";
        PreparedStatement ps=x.prepareStatement(query);
        ps.setString(1,DeptName);
        ResultSet rs=ps.executeQuery();
        if(rs.next())
        {
        DeptId=rs.getString("dept_id");
         
        }
         String query2="select * from course where dept_id=?";
        PreparedStatement ps2=x.prepareStatement(query2);
        ps2.setString(1,DeptId);
        ResultSet rs2=ps2.executeQuery();
        while(rs2.next())
        {
        
             String CourseId=rs2.getString("course_id");
            String CourseName=rs2.getString("course_name");
            String x1[]=new String[2];
            x1[0]=CourseId;
            x1[1]=CourseName;
            Coursedata.add(x1);
        cmb_CourseName.addItem(CourseName);
         
        }
        
        
        
        }
        
    catch(Exception e)
    {
    e.printStackTrace();
    
    }
    }//GEN-LAST:event_cmb_DeptNameItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteButton;
    private javax.swing.JButton InsertButton;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JComboBox<String> cmb_CourseName;
    private javax.swing.JComboBox<String> cmb_DeptName;
    private javax.swing.JComboBox<String> cmb_SemName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txt_SubjectName;
    // End of variables declaration//GEN-END:variables
}
