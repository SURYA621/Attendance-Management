
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author surya
 */
public class show_attendence extends javax.swing.JInternalFrame {

    /**
     * Creates new form show_attendence
     */
    Connection x;
     ArrayList Sectiondata=new ArrayList();
    public show_attendence(Connection x) {
        
        initComponents();
        this.x=x;
         fill_Combobox();
    }
     void fill_Combobox()
    {
    
         try
        {
          
        
        String query="select * from department";
        PreparedStatement ps=x.prepareStatement(query);
        ResultSet rs=ps.executeQuery();
        while(rs.next())
        {
        cmb_DeptName.addItem(rs.getString("dept_name"));
        // DeptId=rs.getString("dept_id");
         
        }
        }
    catch(Exception e)
    {
    e.printStackTrace();}
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmb_CourseName = new javax.swing.JComboBox<>();
        cmb_DeptName = new javax.swing.JComboBox<>();
        cmb_BatchName = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cmb_SectionName = new javax.swing.JComboBox<>();
        btn_Show = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "rollno", "attendance"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("DeptName");

        jLabel2.setText("CourseName");

        jLabel3.setText("Batch");

        cmb_CourseName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_CourseNameItemStateChanged(evt);
            }
        });

        cmb_DeptName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_DeptNameItemStateChanged(evt);
            }
        });
        cmb_DeptName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_DeptNameActionPerformed(evt);
            }
        });

        cmb_BatchName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_BatchNameItemStateChanged(evt);
            }
        });

        jLabel4.setText("Section");

        btn_Show.setText("Show");
        btn_Show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ShowActionPerformed(evt);
            }
        });

        jLabel5.setText("Show_Attendance");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmb_BatchName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmb_SectionName, 0, 97, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(32, 32, 32)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmb_DeptName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmb_CourseName, 0, 97, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(btn_Show)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 179, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82))
            .addGroup(layout.createSequentialGroup()
                .addGap(275, 275, 275)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cmb_DeptName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(cmb_CourseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(cmb_BatchName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(cmb_SectionName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(41, 41, 41)
                        .addComponent(btn_Show)))
                .addContainerGap(82, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmb_DeptNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_DeptNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_DeptNameActionPerformed

    private void cmb_DeptNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_DeptNameItemStateChanged
        // TODO add your handling code here:
        try
        {
            cmb_CourseName.removeAllItems();
            String DeptId=null;
            String DeptName=(String) cmb_DeptName.getSelectedItem();
        String query="select dept_id from department where dept_name=?";
        PreparedStatement ps=x.prepareStatement(query);
        ps.setString(1,DeptName);
        ResultSet rs=ps.executeQuery();
        if(rs.next())
        {
        DeptId=rs.getString("dept_id");
         
        }
         String query2="select course_name from course where dept_id=?";
        PreparedStatement ps2=x.prepareStatement(query2);
        ps2.setString(1,DeptId);
        ResultSet rs2=ps2.executeQuery();
        while(rs2.next())
        {
        cmb_CourseName.addItem(rs2.getString("course_name"));
         
        }
        
        
        
        }
        
    catch(Exception e)
    {
    e.printStackTrace();
    }
        
    }//GEN-LAST:event_cmb_DeptNameItemStateChanged

    private void cmb_CourseNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_CourseNameItemStateChanged
        // TODO add your handling code here:
        try
        {
            cmb_BatchName.removeAllItems();
            String CourseId=null;
            String CourseName=(String) cmb_CourseName.getSelectedItem();
        String query="select course_id from course where course_name=?";
        PreparedStatement ps=x.prepareStatement(query);
        ps.setString(1,CourseName);
        ResultSet rs=ps.executeQuery();
        if(rs.next())
        {
        CourseId=rs.getString("course_id");
         
        }
         String query2="select batch_name from batch where course_id=?";
        PreparedStatement ps2=x.prepareStatement(query2);
        ps2.setString(1,CourseId);
        ResultSet rs2=ps2.executeQuery();
        while(rs2.next())
        {
        cmb_BatchName.addItem(rs2.getString("batch_name"));
         
        }
        
        
        
        }
        
    catch(Exception e)
    {
    e.printStackTrace();
    }
    }//GEN-LAST:event_cmb_CourseNameItemStateChanged

    private void cmb_BatchNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_BatchNameItemStateChanged
        // TODO add your handling code here:
         try
        {
            cmb_SectionName.removeAllItems();
            Sectiondata.clear();
            String BatchId=null;
            String BatchName=(String) cmb_BatchName.getSelectedItem();
        String query="select batch_id from batch where batch_name=?";
        PreparedStatement ps=x.prepareStatement(query);
        ps.setString(1,BatchName);
        ResultSet rs=ps.executeQuery();
        if(rs.next())
        {
        BatchId=rs.getString("batch_id");
         
        }
         String query2="select * from section where batch_id=?";
        PreparedStatement ps2=x.prepareStatement(query2);
        ps2.setString(1,BatchId);
        ResultSet rs2=ps2.executeQuery();
        while(rs2.next())
        {
           String SectionId=rs2.getString("section_id");
            String SectionName=rs2.getString("section_name");
            String x1[]=new String[2];
            x1[0]=SectionId;
            x1[1]=SectionName;
            Sectiondata.add(x1);
        cmb_SectionName.addItem(SectionName);
        }
        
        
        
        }
        
    catch(Exception e)
    {
    e.printStackTrace();
    }
    }//GEN-LAST:event_cmb_BatchNameItemStateChanged

    private void btn_ShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ShowActionPerformed
        // TODO add your handling code here:
       try
       {
       int Sectionindex=cmb_SectionName.getSelectedIndex();
            String x1[]=(String []) Sectiondata.get(Sectionindex);
            String SectionId=x1[0];
     //       System.out.println(SectionId);//
            String query="select * from student where section_id=?";
PreparedStatement ps=x.prepareStatement(query);
ps.setString(1,SectionId);
ResultSet rs=ps.executeQuery();
 Vector heading=new Vector();
    heading.add("Rollno");
    heading.add("%Attendance");
    Vector data=new Vector();
while(rs.next())
{
    Vector row=new Vector(); 
    float pcount=0;
    float tcount=0;
    String Rollno= rs.getString("rollno");
   // System.out.println("Roolno:"+Rollno);//
    
    String query2="select * from attendance where student_id=?";
PreparedStatement ps2=x.prepareStatement(query2);
ps2.setString(1,Rollno);
ResultSet rs2=ps2.executeQuery();
while(rs2.next())
{
    tcount++;
String status=rs2.getString("status");
System.out.println(status);
if(status.equals("Present"))
{
pcount++;
}
}
System.out.println("tcount:"+tcount);
System.out.println("pcount:"+pcount);
Float ap=(pcount/tcount)*100;
//System.out.println("ap:"+ap);//
row.add(Rollno);
row.add(ap+"%");
data.add(row);
}
DefaultTableModel d=new DefaultTableModel(data,heading);
jTable1.setModel(d);
 
}
catch(Exception e)
    {
    e.printStackTrace();
    }


    }//GEN-LAST:event_btn_ShowActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Show;
    private javax.swing.JComboBox<String> cmb_BatchName;
    private javax.swing.JComboBox<String> cmb_CourseName;
    private javax.swing.JComboBox<String> cmb_DeptName;
    private javax.swing.JComboBox<String> cmb_SectionName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
